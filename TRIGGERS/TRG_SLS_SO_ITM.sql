--------------------------------------------------------
--  DDL for Trigger TRG_SLS$SO$ITM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SLS"."TRG_SLS$SO$ITM" AFTER
  UPDATE OR
  DELETE ON SLS$SO$ITM REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF UPDATING THEN
  INSERT
  INTO trc.SLS$SO$ITM_TRC
    (
      AMC_FLG,
      ASBL_AMT_BS,
      ASBL_AMT_SP,
      BAL_QTY,
      BC_NO,
      CC_ID,
      CLD_ID,
      CNT_QTY,
      DOC_ID,
      EO_PART_NO,
      HO_ORG_ID,
      ITM_AMT_BS,
      ITM_AMT_GS_BS,
      ITM_AMT_GS_SP,
      ITM_AMT_SP,
      ITM_BASIS,
      ITM_DISC_TYP,
      ITM_DISC_VAL,
      ITM_ID,
      ITM_ID_SRC,
      ITM_MIN_SEL_RATE,
      ITM_QTY,
      ITM_QTY_BS,
      ITM_RATE,
      ITM_SR_NO,
      ITM_SR_NO_SRC,
      ITM_UOM,
      ITM_UOM_BS,
      ORG_ID,
      PO_DOC_ID,
      QC_OVERRIDE_FLG,
      QC_REQD_FLG,
      REMARKS,
      SCHM_FLG,
      SCH_ID,
      SLOC_ID,
      STORAGE_TYPE_FLG,
      TAX_RULE_FLG,
      TEMP_AMT_SP,
      TLRNC_QTY_TYPE,
      TLRNC_QTY_VAL,
      TMP_BAL_QTY,
      UOM_CONV_FCTR,
      USR_ID_CREATE,
      USR_ID_CREATE_DT,
      USR_ID_MOD,
      USR_ID_MOD_DT,
      WTY_ID,
      row_add_dt,
      statmnt_type,
      user_nm,
      usr_ipaddr
    )
    VALUES
    (
      :NEW.AMC_FLG,
      :NEW.ASBL_AMT_BS,
      :NEW.ASBL_AMT_SP,
      :NEW.BAL_QTY,
      :NEW.BC_NO,
      :NEW.CC_ID,
      :NEW.CLD_ID,
      :NEW.CNT_QTY,
      :NEW.DOC_ID,
      :NEW.EO_PART_NO,
      :NEW.HO_ORG_ID,
      :NEW.ITM_AMT_BS,
      :NEW.ITM_AMT_GS_BS,
      :NEW.ITM_AMT_GS_SP,
      :NEW.ITM_AMT_SP,
      :NEW.ITM_BASIS,
      :NEW.ITM_DISC_TYP,
      :NEW.ITM_DISC_VAL,
      :NEW.ITM_ID,
      :NEW.ITM_ID_SRC,
      :NEW.ITM_MIN_SEL_RATE,
      :NEW.ITM_QTY,
      :NEW.ITM_QTY_BS,
      :NEW.ITM_RATE,
      :NEW.ITM_SR_NO,
      :NEW.ITM_SR_NO_SRC,
      :NEW.ITM_UOM,
      :NEW.ITM_UOM_BS,
      :NEW.ORG_ID,
      :NEW.PO_DOC_ID,
      :NEW.QC_OVERRIDE_FLG,
      :NEW.QC_REQD_FLG,
      :NEW.REMARKS,
      :NEW.SCHM_FLG,
      :NEW.SCH_ID,
      :NEW.SLOC_ID,
      :NEW.STORAGE_TYPE_FLG,
      :NEW.TAX_RULE_FLG,
      :NEW.TEMP_AMT_SP,
      :NEW.TLRNC_QTY_TYPE,
      :NEW.TLRNC_QTY_VAL,
      :NEW.TMP_BAL_QTY,
      :NEW.UOM_CONV_FCTR,
      :NEW.USR_ID_CREATE,
      :NEW.USR_ID_CREATE_DT,
      :NEW.USR_ID_MOD,
      :NEW.USR_ID_MOD_DT,
      :NEW.WTY_ID,
      SYSTIMESTAMP,
      'U',
      'SLS',
      (SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') FROM DUAL
      )
    );
END IF;
IF DELETING THEN
  INSERT
  INTO trc.SLS$SO$ITM_TRC
    (
      AMC_FLG,
      ASBL_AMT_BS,
      ASBL_AMT_SP,
      BAL_QTY,
      BC_NO,
      CC_ID,
      CLD_ID,
      CNT_QTY,
      DOC_ID,
      EO_PART_NO,
      HO_ORG_ID,
      ITM_AMT_BS,
      ITM_AMT_GS_BS,
      ITM_AMT_GS_SP,
      ITM_AMT_SP,
      ITM_BASIS,
      ITM_DISC_TYP,
      ITM_DISC_VAL,
      ITM_ID,
      ITM_ID_SRC,
      ITM_MIN_SEL_RATE,
      ITM_QTY,
      ITM_QTY_BS,
      ITM_RATE,
      ITM_SR_NO,
      ITM_SR_NO_SRC,
      ITM_UOM,
      ITM_UOM_BS,
      ORG_ID,
      PO_DOC_ID,
      QC_OVERRIDE_FLG,
      QC_REQD_FLG,
      REMARKS,
      SCHM_FLG,
      SCH_ID,
      SLOC_ID,
      STORAGE_TYPE_FLG,
      TAX_RULE_FLG,
      TEMP_AMT_SP,
      TLRNC_QTY_TYPE,
      TLRNC_QTY_VAL,
      TMP_BAL_QTY,
      UOM_CONV_FCTR,
      USR_ID_CREATE,
      USR_ID_CREATE_DT,
      USR_ID_MOD,
      USR_ID_MOD_DT,
      WTY_ID,
      row_add_dt,
      statmnt_type,
      user_nm,
      usr_ipaddr
    )
    VALUES
    (
      :OLD.AMC_FLG,
      :OLD.ASBL_AMT_BS,
      :OLD.ASBL_AMT_SP,
      :OLD.BAL_QTY,
      :OLD.BC_NO,
      :OLD.CC_ID,
      :OLD.CLD_ID,
      :OLD.CNT_QTY,
      :OLD.DOC_ID,
      :OLD.EO_PART_NO,
      :OLD.HO_ORG_ID,
      :OLD.ITM_AMT_BS,
      :OLD.ITM_AMT_GS_BS,
      :OLD.ITM_AMT_GS_SP,
      :OLD.ITM_AMT_SP,
      :OLD.ITM_BASIS,
      :OLD.ITM_DISC_TYP,
      :OLD.ITM_DISC_VAL,
      :OLD.ITM_ID,
      :OLD.ITM_ID_SRC,
      :OLD.ITM_MIN_SEL_RATE,
      :OLD.ITM_QTY,
      :OLD.ITM_QTY_BS,
      :OLD.ITM_RATE,
      :OLD.ITM_SR_NO,
      :OLD.ITM_SR_NO_SRC,
      :OLD.ITM_UOM,
      :OLD.ITM_UOM_BS,
      :OLD.ORG_ID,
      :OLD.PO_DOC_ID,
      :OLD.QC_OVERRIDE_FLG,
      :OLD.QC_REQD_FLG,
      :OLD.REMARKS,
      :OLD.SCHM_FLG,
      :OLD.SCH_ID,
      :OLD.SLOC_ID,
      :OLD.STORAGE_TYPE_FLG,
      :OLD.TAX_RULE_FLG,
      :OLD.TEMP_AMT_SP,
      :OLD.TLRNC_QTY_TYPE,
      :OLD.TLRNC_QTY_VAL,
      :OLD.TMP_BAL_QTY,
      :OLD.UOM_CONV_FCTR,
      :OLD.USR_ID_CREATE,
      :OLD.USR_ID_CREATE_DT,
      :OLD.USR_ID_MOD,
      :OLD.USR_ID_MOD_DT,
      :OLD.WTY_ID,
      SYSTIMESTAMP,
      'D',
      'SLS',
      (SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') FROM DUAL
      )
    );
END IF;
END;










/
ALTER TRIGGER "SLS"."TRG_SLS$SO$ITM" ENABLE;
